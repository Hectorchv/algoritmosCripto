// Copyright (C) 2020  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 20.1.0 Build 711 06/05/2020 SJ Lite Edition"

// DATE "04/01/2025 22:16:52"

// 
// Device: Altera 10M50DAF484C7G Package FBGA484
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module lfsr (
	clk,
	reset,
	enable,
	lfsr_out,
	\sequence );
input 	clk;
input 	reset;
input 	enable;
output 	[7:0] lfsr_out;
output 	\sequence ;

// Design Ports Information
// lfsr_out[0]	=>  Location: PIN_R22,	 I/O Standard: 2.5 V,	 Current Strength: Default
// lfsr_out[1]	=>  Location: PIN_P22,	 I/O Standard: 2.5 V,	 Current Strength: Default
// lfsr_out[2]	=>  Location: PIN_U22,	 I/O Standard: 2.5 V,	 Current Strength: Default
// lfsr_out[3]	=>  Location: PIN_R20,	 I/O Standard: 2.5 V,	 Current Strength: Default
// lfsr_out[4]	=>  Location: PIN_U21,	 I/O Standard: 2.5 V,	 Current Strength: Default
// lfsr_out[5]	=>  Location: PIN_T22,	 I/O Standard: 2.5 V,	 Current Strength: Default
// lfsr_out[6]	=>  Location: PIN_R15,	 I/O Standard: 2.5 V,	 Current Strength: Default
// lfsr_out[7]	=>  Location: PIN_T20,	 I/O Standard: 2.5 V,	 Current Strength: Default
// sequence	=>  Location: PIN_T19,	 I/O Standard: 2.5 V,	 Current Strength: Default
// clk	=>  Location: PIN_M8,	 I/O Standard: 2.5 V,	 Current Strength: Default
// reset	=>  Location: PIN_M9,	 I/O Standard: 2.5 V,	 Current Strength: Default
// enable	=>  Location: PIN_T18,	 I/O Standard: 2.5 V,	 Current Strength: Default


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \~QUARTUS_CREATED_GND~I_combout ;
wire \~QUARTUS_CREATED_UNVM~~busy ;
wire \~QUARTUS_CREATED_ADC1~~eoc ;
wire \~QUARTUS_CREATED_ADC2~~eoc ;
wire \lfsr_out[0]~output_o ;
wire \lfsr_out[1]~output_o ;
wire \lfsr_out[2]~output_o ;
wire \lfsr_out[3]~output_o ;
wire \lfsr_out[4]~output_o ;
wire \lfsr_out[5]~output_o ;
wire \lfsr_out[6]~output_o ;
wire \lfsr_out[7]~output_o ;
wire \sequence~output_o ;
wire \clk~input_o ;
wire \clk~inputclkctrl_outclk ;
wire \lfsr_reg~0_combout ;
wire \reset~input_o ;
wire \reset~inputclkctrl_outclk ;
wire \enable~input_o ;
wire \lfsr_reg[6]~feeder_combout ;
wire \lfsr_reg[5]~2_combout ;
wire \lfsr_reg[4]~feeder_combout ;
wire \lfsr_reg[3]~feeder_combout ;
wire \lfsr_reg[2]~feeder_combout ;
wire \lfsr_reg[1]~1_combout ;
wire \lfsr_reg[0]~feeder_combout ;
wire \sequence_reg~0_combout ;
wire \sequence_reg~q ;
wire [7:0] lfsr_reg;


hard_block auto_generated_inst(
	.devpor(devpor),
	.devclrn(devclrn),
	.devoe(devoe));

// Location: LCCOMB_X44_Y45_N20
fiftyfivenm_lcell_comb \~QUARTUS_CREATED_GND~I (
// Equation(s):
// \~QUARTUS_CREATED_GND~I_combout  = GND

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(gnd),
	.cin(gnd),
	.combout(\~QUARTUS_CREATED_GND~I_combout ),
	.cout());
// synopsys translate_off
defparam \~QUARTUS_CREATED_GND~I .lut_mask = 16'h0000;
defparam \~QUARTUS_CREATED_GND~I .sum_lutc_input = "datac";
// synopsys translate_on

// Location: IOOBUF_X78_Y21_N9
fiftyfivenm_io_obuf \lfsr_out[0]~output (
	.i(!lfsr_reg[0]),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\lfsr_out[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \lfsr_out[0]~output .bus_hold = "false";
defparam \lfsr_out[0]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X78_Y21_N2
fiftyfivenm_io_obuf \lfsr_out[1]~output (
	.i(!lfsr_reg[1]),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\lfsr_out[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \lfsr_out[1]~output .bus_hold = "false";
defparam \lfsr_out[1]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X78_Y21_N16
fiftyfivenm_io_obuf \lfsr_out[2]~output (
	.i(lfsr_reg[2]),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\lfsr_out[2]~output_o ),
	.obar());
// synopsys translate_off
defparam \lfsr_out[2]~output .bus_hold = "false";
defparam \lfsr_out[2]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X78_Y20_N2
fiftyfivenm_io_obuf \lfsr_out[3]~output (
	.i(lfsr_reg[3]),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\lfsr_out[3]~output_o ),
	.obar());
// synopsys translate_off
defparam \lfsr_out[3]~output .bus_hold = "false";
defparam \lfsr_out[3]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X78_Y21_N23
fiftyfivenm_io_obuf \lfsr_out[4]~output (
	.i(lfsr_reg[4]),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\lfsr_out[4]~output_o ),
	.obar());
// synopsys translate_off
defparam \lfsr_out[4]~output .bus_hold = "false";
defparam \lfsr_out[4]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X78_Y18_N2
fiftyfivenm_io_obuf \lfsr_out[5]~output (
	.i(lfsr_reg[5]),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\lfsr_out[5]~output_o ),
	.obar());
// synopsys translate_off
defparam \lfsr_out[5]~output .bus_hold = "false";
defparam \lfsr_out[5]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X78_Y18_N23
fiftyfivenm_io_obuf \lfsr_out[6]~output (
	.i(!lfsr_reg[6]),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\lfsr_out[6]~output_o ),
	.obar());
// synopsys translate_off
defparam \lfsr_out[6]~output .bus_hold = "false";
defparam \lfsr_out[6]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X78_Y20_N9
fiftyfivenm_io_obuf \lfsr_out[7]~output (
	.i(!lfsr_reg[7]),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\lfsr_out[7]~output_o ),
	.obar());
// synopsys translate_off
defparam \lfsr_out[7]~output .bus_hold = "false";
defparam \lfsr_out[7]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X78_Y20_N24
fiftyfivenm_io_obuf \sequence~output (
	.i(\sequence_reg~q ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\sequence~output_o ),
	.obar());
// synopsys translate_off
defparam \sequence~output .bus_hold = "false";
defparam \sequence~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOIBUF_X0_Y18_N15
fiftyfivenm_io_ibuf \clk~input (
	.i(clk),
	.ibar(gnd),
	.nsleep(vcc),
	.o(\clk~input_o ));
// synopsys translate_off
defparam \clk~input .bus_hold = "false";
defparam \clk~input .listen_to_nsleep_signal = "false";
defparam \clk~input .simulate_z_as = "z";
// synopsys translate_on

// Location: CLKCTRL_G3
fiftyfivenm_clkctrl \clk~inputclkctrl (
	.ena(vcc),
	.inclk({vcc,vcc,vcc,\clk~input_o }),
	.clkselect(2'b00),
	.devclrn(devclrn),
	.devpor(devpor),
	.outclk(\clk~inputclkctrl_outclk ));
// synopsys translate_off
defparam \clk~inputclkctrl .clock_type = "global clock";
defparam \clk~inputclkctrl .ena_register_mode = "none";
// synopsys translate_on

// Location: LCCOMB_X77_Y21_N18
fiftyfivenm_lcell_comb \lfsr_reg~0 (
// Equation(s):
// \lfsr_reg~0_combout  = lfsr_reg[1] $ (lfsr_reg[0] $ (lfsr_reg[7] $ (!lfsr_reg[6])))

	.dataa(lfsr_reg[1]),
	.datab(lfsr_reg[0]),
	.datac(lfsr_reg[7]),
	.datad(lfsr_reg[6]),
	.cin(gnd),
	.combout(\lfsr_reg~0_combout ),
	.cout());
// synopsys translate_off
defparam \lfsr_reg~0 .lut_mask = 16'h9669;
defparam \lfsr_reg~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: IOIBUF_X0_Y18_N22
fiftyfivenm_io_ibuf \reset~input (
	.i(reset),
	.ibar(gnd),
	.nsleep(vcc),
	.o(\reset~input_o ));
// synopsys translate_off
defparam \reset~input .bus_hold = "false";
defparam \reset~input .listen_to_nsleep_signal = "false";
defparam \reset~input .simulate_z_as = "z";
// synopsys translate_on

// Location: CLKCTRL_G4
fiftyfivenm_clkctrl \reset~inputclkctrl (
	.ena(vcc),
	.inclk({vcc,vcc,vcc,\reset~input_o }),
	.clkselect(2'b00),
	.devclrn(devclrn),
	.devpor(devpor),
	.outclk(\reset~inputclkctrl_outclk ));
// synopsys translate_off
defparam \reset~inputclkctrl .clock_type = "global clock";
defparam \reset~inputclkctrl .ena_register_mode = "none";
// synopsys translate_on

// Location: IOIBUF_X78_Y20_N15
fiftyfivenm_io_ibuf \enable~input (
	.i(enable),
	.ibar(gnd),
	.nsleep(vcc),
	.o(\enable~input_o ));
// synopsys translate_off
defparam \enable~input .bus_hold = "false";
defparam \enable~input .listen_to_nsleep_signal = "false";
defparam \enable~input .simulate_z_as = "z";
// synopsys translate_on

// Location: FF_X77_Y21_N19
dffeas \lfsr_reg[7] (
	.clk(\clk~inputclkctrl_outclk ),
	.d(\lfsr_reg~0_combout ),
	.asdata(vcc),
	.clrn(!\reset~inputclkctrl_outclk ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\enable~input_o ),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(lfsr_reg[7]),
	.prn(vcc));
// synopsys translate_off
defparam \lfsr_reg[7] .is_wysiwyg = "true";
defparam \lfsr_reg[7] .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X77_Y21_N20
fiftyfivenm_lcell_comb \lfsr_reg[6]~feeder (
// Equation(s):
// \lfsr_reg[6]~feeder_combout  = lfsr_reg[7]

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(lfsr_reg[7]),
	.cin(gnd),
	.combout(\lfsr_reg[6]~feeder_combout ),
	.cout());
// synopsys translate_off
defparam \lfsr_reg[6]~feeder .lut_mask = 16'hFF00;
defparam \lfsr_reg[6]~feeder .sum_lutc_input = "datac";
// synopsys translate_on

// Location: FF_X77_Y21_N21
dffeas \lfsr_reg[6] (
	.clk(\clk~inputclkctrl_outclk ),
	.d(\lfsr_reg[6]~feeder_combout ),
	.asdata(vcc),
	.clrn(!\reset~inputclkctrl_outclk ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\enable~input_o ),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(lfsr_reg[6]),
	.prn(vcc));
// synopsys translate_off
defparam \lfsr_reg[6] .is_wysiwyg = "true";
defparam \lfsr_reg[6] .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X77_Y21_N2
fiftyfivenm_lcell_comb \lfsr_reg[5]~2 (
// Equation(s):
// \lfsr_reg[5]~2_combout  = !lfsr_reg[6]

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(lfsr_reg[6]),
	.cin(gnd),
	.combout(\lfsr_reg[5]~2_combout ),
	.cout());
// synopsys translate_off
defparam \lfsr_reg[5]~2 .lut_mask = 16'h00FF;
defparam \lfsr_reg[5]~2 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: FF_X77_Y21_N3
dffeas \lfsr_reg[5] (
	.clk(\clk~inputclkctrl_outclk ),
	.d(\lfsr_reg[5]~2_combout ),
	.asdata(vcc),
	.clrn(!\reset~inputclkctrl_outclk ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\enable~input_o ),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(lfsr_reg[5]),
	.prn(vcc));
// synopsys translate_off
defparam \lfsr_reg[5] .is_wysiwyg = "true";
defparam \lfsr_reg[5] .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X77_Y21_N24
fiftyfivenm_lcell_comb \lfsr_reg[4]~feeder (
// Equation(s):
// \lfsr_reg[4]~feeder_combout  = lfsr_reg[5]

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(lfsr_reg[5]),
	.cin(gnd),
	.combout(\lfsr_reg[4]~feeder_combout ),
	.cout());
// synopsys translate_off
defparam \lfsr_reg[4]~feeder .lut_mask = 16'hFF00;
defparam \lfsr_reg[4]~feeder .sum_lutc_input = "datac";
// synopsys translate_on

// Location: FF_X77_Y21_N25
dffeas \lfsr_reg[4] (
	.clk(\clk~inputclkctrl_outclk ),
	.d(\lfsr_reg[4]~feeder_combout ),
	.asdata(vcc),
	.clrn(!\reset~inputclkctrl_outclk ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\enable~input_o ),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(lfsr_reg[4]),
	.prn(vcc));
// synopsys translate_off
defparam \lfsr_reg[4] .is_wysiwyg = "true";
defparam \lfsr_reg[4] .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X77_Y21_N10
fiftyfivenm_lcell_comb \lfsr_reg[3]~feeder (
// Equation(s):
// \lfsr_reg[3]~feeder_combout  = lfsr_reg[4]

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(lfsr_reg[4]),
	.cin(gnd),
	.combout(\lfsr_reg[3]~feeder_combout ),
	.cout());
// synopsys translate_off
defparam \lfsr_reg[3]~feeder .lut_mask = 16'hFF00;
defparam \lfsr_reg[3]~feeder .sum_lutc_input = "datac";
// synopsys translate_on

// Location: FF_X77_Y21_N11
dffeas \lfsr_reg[3] (
	.clk(\clk~inputclkctrl_outclk ),
	.d(\lfsr_reg[3]~feeder_combout ),
	.asdata(vcc),
	.clrn(!\reset~inputclkctrl_outclk ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\enable~input_o ),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(lfsr_reg[3]),
	.prn(vcc));
// synopsys translate_off
defparam \lfsr_reg[3] .is_wysiwyg = "true";
defparam \lfsr_reg[3] .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X77_Y21_N28
fiftyfivenm_lcell_comb \lfsr_reg[2]~feeder (
// Equation(s):
// \lfsr_reg[2]~feeder_combout  = lfsr_reg[3]

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(lfsr_reg[3]),
	.cin(gnd),
	.combout(\lfsr_reg[2]~feeder_combout ),
	.cout());
// synopsys translate_off
defparam \lfsr_reg[2]~feeder .lut_mask = 16'hFF00;
defparam \lfsr_reg[2]~feeder .sum_lutc_input = "datac";
// synopsys translate_on

// Location: FF_X77_Y21_N29
dffeas \lfsr_reg[2] (
	.clk(\clk~inputclkctrl_outclk ),
	.d(\lfsr_reg[2]~feeder_combout ),
	.asdata(vcc),
	.clrn(!\reset~inputclkctrl_outclk ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\enable~input_o ),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(lfsr_reg[2]),
	.prn(vcc));
// synopsys translate_off
defparam \lfsr_reg[2] .is_wysiwyg = "true";
defparam \lfsr_reg[2] .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X77_Y21_N6
fiftyfivenm_lcell_comb \lfsr_reg[1]~1 (
// Equation(s):
// \lfsr_reg[1]~1_combout  = !lfsr_reg[2]

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(lfsr_reg[2]),
	.cin(gnd),
	.combout(\lfsr_reg[1]~1_combout ),
	.cout());
// synopsys translate_off
defparam \lfsr_reg[1]~1 .lut_mask = 16'h00FF;
defparam \lfsr_reg[1]~1 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: FF_X77_Y21_N7
dffeas \lfsr_reg[1] (
	.clk(\clk~inputclkctrl_outclk ),
	.d(\lfsr_reg[1]~1_combout ),
	.asdata(vcc),
	.clrn(!\reset~inputclkctrl_outclk ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\enable~input_o ),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(lfsr_reg[1]),
	.prn(vcc));
// synopsys translate_off
defparam \lfsr_reg[1] .is_wysiwyg = "true";
defparam \lfsr_reg[1] .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X77_Y21_N16
fiftyfivenm_lcell_comb \lfsr_reg[0]~feeder (
// Equation(s):
// \lfsr_reg[0]~feeder_combout  = lfsr_reg[1]

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(lfsr_reg[1]),
	.cin(gnd),
	.combout(\lfsr_reg[0]~feeder_combout ),
	.cout());
// synopsys translate_off
defparam \lfsr_reg[0]~feeder .lut_mask = 16'hFF00;
defparam \lfsr_reg[0]~feeder .sum_lutc_input = "datac";
// synopsys translate_on

// Location: FF_X77_Y21_N17
dffeas \lfsr_reg[0] (
	.clk(\clk~inputclkctrl_outclk ),
	.d(\lfsr_reg[0]~feeder_combout ),
	.asdata(vcc),
	.clrn(!\reset~inputclkctrl_outclk ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\enable~input_o ),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(lfsr_reg[0]),
	.prn(vcc));
// synopsys translate_off
defparam \lfsr_reg[0] .is_wysiwyg = "true";
defparam \lfsr_reg[0] .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X77_Y21_N12
fiftyfivenm_lcell_comb \sequence_reg~0 (
// Equation(s):
// \sequence_reg~0_combout  = (\reset~input_o  & (((\sequence_reg~q )))) # (!\reset~input_o  & ((\enable~input_o  & ((!lfsr_reg[0]))) # (!\enable~input_o  & (\sequence_reg~q ))))

	.dataa(\reset~input_o ),
	.datab(\enable~input_o ),
	.datac(\sequence_reg~q ),
	.datad(lfsr_reg[0]),
	.cin(gnd),
	.combout(\sequence_reg~0_combout ),
	.cout());
// synopsys translate_off
defparam \sequence_reg~0 .lut_mask = 16'hB0F4;
defparam \sequence_reg~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: FF_X77_Y21_N13
dffeas sequence_reg(
	.clk(\clk~inputclkctrl_outclk ),
	.d(\sequence_reg~0_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\sequence_reg~q ),
	.prn(vcc));
// synopsys translate_off
defparam sequence_reg.is_wysiwyg = "true";
defparam sequence_reg.power_up = "low";
// synopsys translate_on

// Location: UNVM_X0_Y40_N40
fiftyfivenm_unvm \~QUARTUS_CREATED_UNVM~ (
	.arclk(vcc),
	.arshft(vcc),
	.drclk(vcc),
	.drshft(vcc),
	.drdin(vcc),
	.nprogram(vcc),
	.nerase(vcc),
	.nosc_ena(\~QUARTUS_CREATED_GND~I_combout ),
	.par_en(vcc),
	.xe_ye(\~QUARTUS_CREATED_GND~I_combout ),
	.se(\~QUARTUS_CREATED_GND~I_combout ),
	.ardin(23'b11111111111111111111111),
	.busy(\~QUARTUS_CREATED_UNVM~~busy ),
	.osc(),
	.bgpbusy(),
	.sp_pass(),
	.se_pass(),
	.drdout());
// synopsys translate_off
defparam \~QUARTUS_CREATED_UNVM~ .addr_range1_end_addr = -1;
defparam \~QUARTUS_CREATED_UNVM~ .addr_range1_offset = -1;
defparam \~QUARTUS_CREATED_UNVM~ .addr_range2_end_addr = -1;
defparam \~QUARTUS_CREATED_UNVM~ .addr_range2_offset = -1;
defparam \~QUARTUS_CREATED_UNVM~ .addr_range3_offset = -1;
defparam \~QUARTUS_CREATED_UNVM~ .is_compressed_image = "false";
defparam \~QUARTUS_CREATED_UNVM~ .is_dual_boot = "false";
defparam \~QUARTUS_CREATED_UNVM~ .is_eram_skip = "false";
defparam \~QUARTUS_CREATED_UNVM~ .max_ufm_valid_addr = -1;
defparam \~QUARTUS_CREATED_UNVM~ .max_valid_addr = -1;
defparam \~QUARTUS_CREATED_UNVM~ .min_ufm_valid_addr = -1;
defparam \~QUARTUS_CREATED_UNVM~ .min_valid_addr = -1;
defparam \~QUARTUS_CREATED_UNVM~ .part_name = "quartus_created_unvm";
defparam \~QUARTUS_CREATED_UNVM~ .reserve_block = "true";
// synopsys translate_on

// Location: ADCBLOCK_X43_Y52_N0
fiftyfivenm_adcblock \~QUARTUS_CREATED_ADC1~ (
	.soc(\~QUARTUS_CREATED_GND~I_combout ),
	.usr_pwd(vcc),
	.tsen(\~QUARTUS_CREATED_GND~I_combout ),
	.clkin_from_pll_c0(gnd),
	.chsel({\~QUARTUS_CREATED_GND~I_combout ,\~QUARTUS_CREATED_GND~I_combout ,\~QUARTUS_CREATED_GND~I_combout ,\~QUARTUS_CREATED_GND~I_combout ,\~QUARTUS_CREATED_GND~I_combout }),
	.eoc(\~QUARTUS_CREATED_ADC1~~eoc ),
	.dout());
// synopsys translate_off
defparam \~QUARTUS_CREATED_ADC1~ .analog_input_pin_mask = 0;
defparam \~QUARTUS_CREATED_ADC1~ .clkdiv = 1;
defparam \~QUARTUS_CREATED_ADC1~ .device_partname_fivechar_prefix = "none";
defparam \~QUARTUS_CREATED_ADC1~ .is_this_first_or_second_adc = 1;
defparam \~QUARTUS_CREATED_ADC1~ .prescalar = 0;
defparam \~QUARTUS_CREATED_ADC1~ .pwd = 1;
defparam \~QUARTUS_CREATED_ADC1~ .refsel = 0;
defparam \~QUARTUS_CREATED_ADC1~ .reserve_block = "true";
defparam \~QUARTUS_CREATED_ADC1~ .testbits = 66;
defparam \~QUARTUS_CREATED_ADC1~ .tsclkdiv = 1;
defparam \~QUARTUS_CREATED_ADC1~ .tsclksel = 0;
// synopsys translate_on

// Location: ADCBLOCK_X43_Y51_N0
fiftyfivenm_adcblock \~QUARTUS_CREATED_ADC2~ (
	.soc(\~QUARTUS_CREATED_GND~I_combout ),
	.usr_pwd(vcc),
	.tsen(\~QUARTUS_CREATED_GND~I_combout ),
	.clkin_from_pll_c0(gnd),
	.chsel({\~QUARTUS_CREATED_GND~I_combout ,\~QUARTUS_CREATED_GND~I_combout ,\~QUARTUS_CREATED_GND~I_combout ,\~QUARTUS_CREATED_GND~I_combout ,\~QUARTUS_CREATED_GND~I_combout }),
	.eoc(\~QUARTUS_CREATED_ADC2~~eoc ),
	.dout());
// synopsys translate_off
defparam \~QUARTUS_CREATED_ADC2~ .analog_input_pin_mask = 0;
defparam \~QUARTUS_CREATED_ADC2~ .clkdiv = 1;
defparam \~QUARTUS_CREATED_ADC2~ .device_partname_fivechar_prefix = "none";
defparam \~QUARTUS_CREATED_ADC2~ .is_this_first_or_second_adc = 2;
defparam \~QUARTUS_CREATED_ADC2~ .prescalar = 0;
defparam \~QUARTUS_CREATED_ADC2~ .pwd = 1;
defparam \~QUARTUS_CREATED_ADC2~ .refsel = 0;
defparam \~QUARTUS_CREATED_ADC2~ .reserve_block = "true";
defparam \~QUARTUS_CREATED_ADC2~ .testbits = 66;
defparam \~QUARTUS_CREATED_ADC2~ .tsclkdiv = 1;
defparam \~QUARTUS_CREATED_ADC2~ .tsclksel = 0;
// synopsys translate_on

assign lfsr_out[0] = \lfsr_out[0]~output_o ;

assign lfsr_out[1] = \lfsr_out[1]~output_o ;

assign lfsr_out[2] = \lfsr_out[2]~output_o ;

assign lfsr_out[3] = \lfsr_out[3]~output_o ;

assign lfsr_out[4] = \lfsr_out[4]~output_o ;

assign lfsr_out[5] = \lfsr_out[5]~output_o ;

assign lfsr_out[6] = \lfsr_out[6]~output_o ;

assign lfsr_out[7] = \lfsr_out[7]~output_o ;

assign \sequence  = \sequence~output_o ;

endmodule

module hard_block (

	devpor,
	devclrn,
	devoe);

// Design Ports Information
// ~ALTERA_TMS~	=>  Location: PIN_H2,	 I/O Standard: 2.5 V Schmitt Trigger,	 Current Strength: Default
// ~ALTERA_TCK~	=>  Location: PIN_G2,	 I/O Standard: 2.5 V Schmitt Trigger,	 Current Strength: Default
// ~ALTERA_TDI~	=>  Location: PIN_L4,	 I/O Standard: 2.5 V Schmitt Trigger,	 Current Strength: Default
// ~ALTERA_TDO~	=>  Location: PIN_M5,	 I/O Standard: 2.5 V,	 Current Strength: Default
// ~ALTERA_CONFIG_SEL~	=>  Location: PIN_H10,	 I/O Standard: 2.5 V,	 Current Strength: Default
// ~ALTERA_nCONFIG~	=>  Location: PIN_H9,	 I/O Standard: 2.5 V Schmitt Trigger,	 Current Strength: Default
// ~ALTERA_nSTATUS~	=>  Location: PIN_G9,	 I/O Standard: 2.5 V Schmitt Trigger,	 Current Strength: Default
// ~ALTERA_CONF_DONE~	=>  Location: PIN_F8,	 I/O Standard: 2.5 V Schmitt Trigger,	 Current Strength: Default

input 	devpor;
input 	devclrn;
input 	devoe;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

wire \~ALTERA_TMS~~padout ;
wire \~ALTERA_TCK~~padout ;
wire \~ALTERA_TDI~~padout ;
wire \~ALTERA_CONFIG_SEL~~padout ;
wire \~ALTERA_nCONFIG~~padout ;
wire \~ALTERA_nSTATUS~~padout ;
wire \~ALTERA_CONF_DONE~~padout ;
wire \~ALTERA_TMS~~ibuf_o ;
wire \~ALTERA_TCK~~ibuf_o ;
wire \~ALTERA_TDI~~ibuf_o ;
wire \~ALTERA_CONFIG_SEL~~ibuf_o ;
wire \~ALTERA_nCONFIG~~ibuf_o ;
wire \~ALTERA_nSTATUS~~ibuf_o ;
wire \~ALTERA_CONF_DONE~~ibuf_o ;


endmodule
