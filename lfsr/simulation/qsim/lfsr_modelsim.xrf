vendor_name = ModelSim
source_file = 1, /home/hector/cripto/algoritmos/lfsr/lfsr.vhd
source_file = 1, /home/hector/cripto/algoritmos/lfsr/Waveform.vwf
source_file = 1, /home/hector/intelFPGA_lite/20.1/quartus/libraries/vhdl/ieee/prmtvs_b.vhd
source_file = 1, /home/hector/intelFPGA_lite/20.1/quartus/libraries/vhdl/ieee/prmtvs_p.vhd
source_file = 1, /home/hector/intelFPGA_lite/20.1/quartus/libraries/vhdl/ieee/timing_b.vhd
source_file = 1, /home/hector/intelFPGA_lite/20.1/quartus/libraries/vhdl/ieee/timing_p.vhd
source_file = 1, /home/hector/cripto/algoritmos/lfsr/db/lfsr.cbx.xml
design_name = hard_block
design_name = lfsr
instance = comp, \~QUARTUS_CREATED_GND~I\, ~QUARTUS_CREATED_GND~I, lfsr, 1
instance = comp, \lfsr_out[0]~output\, lfsr_out[0]~output, lfsr, 1
instance = comp, \lfsr_out[1]~output\, lfsr_out[1]~output, lfsr, 1
instance = comp, \lfsr_out[2]~output\, lfsr_out[2]~output, lfsr, 1
instance = comp, \lfsr_out[3]~output\, lfsr_out[3]~output, lfsr, 1
instance = comp, \lfsr_out[4]~output\, lfsr_out[4]~output, lfsr, 1
instance = comp, \lfsr_out[5]~output\, lfsr_out[5]~output, lfsr, 1
instance = comp, \lfsr_out[6]~output\, lfsr_out[6]~output, lfsr, 1
instance = comp, \lfsr_out[7]~output\, lfsr_out[7]~output, lfsr, 1
instance = comp, \sequence~output\, sequence~output, lfsr, 1
instance = comp, \clk~input\, clk~input, lfsr, 1
instance = comp, \clk~inputclkctrl\, clk~inputclkctrl, lfsr, 1
instance = comp, \lfsr_reg~0\, lfsr_reg~0, lfsr, 1
instance = comp, \reset~input\, reset~input, lfsr, 1
instance = comp, \reset~inputclkctrl\, reset~inputclkctrl, lfsr, 1
instance = comp, \enable~input\, enable~input, lfsr, 1
instance = comp, \lfsr_reg[7]\, lfsr_reg[7], lfsr, 1
instance = comp, \lfsr_reg[6]~feeder\, lfsr_reg[6]~feeder, lfsr, 1
instance = comp, \lfsr_reg[6]\, lfsr_reg[6], lfsr, 1
instance = comp, \lfsr_reg[5]~2\, lfsr_reg[5]~2, lfsr, 1
instance = comp, \lfsr_reg[5]\, lfsr_reg[5], lfsr, 1
instance = comp, \lfsr_reg[4]~feeder\, lfsr_reg[4]~feeder, lfsr, 1
instance = comp, \lfsr_reg[4]\, lfsr_reg[4], lfsr, 1
instance = comp, \lfsr_reg[3]~feeder\, lfsr_reg[3]~feeder, lfsr, 1
instance = comp, \lfsr_reg[3]\, lfsr_reg[3], lfsr, 1
instance = comp, \lfsr_reg[2]~feeder\, lfsr_reg[2]~feeder, lfsr, 1
instance = comp, \lfsr_reg[2]\, lfsr_reg[2], lfsr, 1
instance = comp, \lfsr_reg[1]~1\, lfsr_reg[1]~1, lfsr, 1
instance = comp, \lfsr_reg[1]\, lfsr_reg[1], lfsr, 1
instance = comp, \lfsr_reg[0]~feeder\, lfsr_reg[0]~feeder, lfsr, 1
instance = comp, \lfsr_reg[0]\, lfsr_reg[0], lfsr, 1
instance = comp, \sequence_reg~0\, sequence_reg~0, lfsr, 1
instance = comp, \~QUARTUS_CREATED_UNVM~\, ~QUARTUS_CREATED_UNVM~, lfsr, 1
instance = comp, \~QUARTUS_CREATED_ADC1~\, ~QUARTUS_CREATED_ADC1~, lfsr, 1
instance = comp, \~QUARTUS_CREATED_ADC2~\, ~QUARTUS_CREATED_ADC2~, lfsr, 1
